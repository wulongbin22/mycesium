{"version":3,"file":"js/501.62a933e5.js","mappings":"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","sources":["webpack://mycesium2/./node_modules/builtin-status-codes/browser.js","webpack://mycesium2/./node_modules/readable-stream/readable-browser.js","webpack://mycesium2/./node_modules/stream-http/index.js","webpack://mycesium2/./node_modules/stream-http/lib/capability.js","webpack://mycesium2/./node_modules/stream-http/lib/request.js","webpack://mycesium2/./node_modules/stream-http/lib/response.js","webpack://mycesium2/./node_modules/xtend/immutable.js"],"sourcesContent":["module.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","var ClientRequest = require('./lib/request')\nvar response = require('./lib/response')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = response.IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.globalAgent = new http.Agent()\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]","exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || checkTypeSupport('arraybuffer')\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && checkTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n","var capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + Buffer.from(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\tself._socketTimeout = null\n\tself._socketTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tif ('timeout' in opts && opts.timeout !== 0) {\n\t\tself.setTimeout(opts.timeout)\n\t}\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n        body = new Blob(self._body, {\n            type: (headersObj['content-type'] || {}).value || ''\n        });\n    }\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._resetTimers(false)\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tself._resetTimers(true)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself._resetTimers(true)\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tself._resetTimers(false)\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress(self._resetTimers.bind(self))\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._resetTimers.bind(self))\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype._resetTimers = function (done) {\n\tvar self = this\n\n\tglobal.clearTimeout(self._socketTimer)\n\tself._socketTimer = null\n\n\tif (done) {\n\t\tglobal.clearTimeout(self._fetchTimer)\n\t\tself._fetchTimer = null\n\t} else if (self._socketTimeout) {\n\t\tself._socketTimer = global.setTimeout(function () {\n\t\t\tself.emit('timeout')\n\t\t}, self._socketTimeout)\n\t}\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function (err) {\n\tvar self = this\n\tself._destroyed = true\n\tself._resetTimers(true)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n\n\tif (err)\n\t\tself.emit('error', err)\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.setTimeout = function (timeout, cb) {\n\tvar self = this\n\n\tif (cb)\n\t\tself.once('timeout', cb)\n\n\tself._socketTimeout = timeout\n\tself._resetTimers(false)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n","var capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, resetTimers) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\tresetTimers(false)\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t} else if(self.push(Buffer.from(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tresetTimers(result.done)\n\t\t\t\tif (result.done) {\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(Buffer.from(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function (err) {\n\t\t\t\tresetTimers(true)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function (resetTimers) {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text':\n\t\t\tresponse = xhr.responseText\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = Buffer.alloc(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(Buffer.from(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tresetTimers(true)\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tresetTimers(true)\n\t\tself.push(null)\n\t}\n}\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n"],"names":["module","exports","Stream","Readable","Writable","Duplex","Transform","PassThrough","finished","pipeline","ClientRequest","response","extend","statusCodes","url","http","request","opts","cb","parse","defaultProtocol","g","location","protocol","search","host","hostname","port","path","indexOf","method","toUpperCase","headers","req","on","get","end","IncomingMessage","Agent","defaultMaxSockets","globalAgent","STATUS_CODES","METHODS","xhr","getXHR","undefined","XMLHttpRequest","open","XDomainRequest","e","checkTypeSupport","type","responseType","isFunction","value","fetch","ReadableStream","writableStream","WritableStream","abortController","AbortController","arraybuffer","msstream","mozchunkedarraybuffer","overrideMimeType","capability","inherits","stream","rStates","readyStates","decideMode","preferBinary","useFetch","self","this","call","_opts","_body","_headers","auth","setHeader","Buffer","from","toString","Object","keys","forEach","name","mode","Error","_mode","_fetchTimer","_socketTimeout","_socketTimer","_onFinish","statusValid","status","prototype","lowerName","toLowerCase","unsafeHeaders","getHeader","header","removeHeader","_destroyed","timeout","setTimeout","headersObj","body","Blob","headersList","keyName","Array","isArray","v","push","signal","controller","_fetchAbortController","requestTimeout","emit","abort","credentials","withCredentials","then","_fetchResponse","_resetTimers","_connect","reason","_xhr","err","process","nextTick","ontimeout","setRequestHeader","_response","onreadystatechange","readyState","LOADING","DONE","_onXHRProgress","onprogress","onerror","send","bind","_write","chunk","encoding","done","clearTimeout","destroy","data","once","flushHeaders","setNoDelay","setSocketKeepAlive","UNSENT","OPENED","HEADERS_RECEIVED","resetTimers","rawHeaders","trailers","rawTrailers","statusCode","statusMessage","statusText","key","writable","write","Promise","resolve","reject","_resumeFetch","close","pipeTo","catch","reader","getReader","read","result","_pos","responseURL","getAllResponseHeaders","split","matches","match","_charset","mimeType","charsetMatch","_read","responseText","length","newData","substr","buffer","alloc","i","charCodeAt","Uint8Array","MSStreamReader","byteLength","slice","onload","readAsArrayBuffer","hasOwnProperty","target","arguments","source"],"sourceRoot":""}